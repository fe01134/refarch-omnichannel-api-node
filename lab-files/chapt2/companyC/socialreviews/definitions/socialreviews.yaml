paths:
  /reviews/oauth:
    post:
      responses:
        '200':
          description: Successful Response
      summary: Oauth Trigger API
      operationId: review.oauth
    get:
      responses:
        '200':
          description: Successful Response
      summary: Oauth Trigger API
      operationId: review.oauth
  /reviews/counter:
    get:
      responses:
        '200':
          description: Request was successful
      operationId: review.counter
      summary: Find the count of reviews for each item
  /reviews/avgrating:
    get:
      responses:
        '200':
          description: Request was successful
      summary: Find Average rating of the item
      operationId: review.avgrating
  /reviews:
    post:
      tags:
        - review
      summary: Create a new instance of the model and persist it into the data source.
      operationId: review.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/review'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/review'
      deprecated: false
    get:
      tags:
        - review
      summary: Find all instances of the model matched by filter from the data source.
      operationId: review.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/review'
      deprecated: false
definitions:
  review:
    properties:
      comment:
        description: reviewer comment
        type: string
      date:
        description: review date
        type: string
        format: date
      itemId:
        description: Item Id
        type: number
        format: double
      rating:
        description: reviewer item rating
        type: number
        format: double
      reviewer_email:
        description: reviewer email
        type: string
      reviewer_name:
        description: reviewer name
        type: string
      id:
        type: number
        format: double
    required:
      - itemId
    additionalProperties: false
swagger: '2.0'
info:
  x-ibm-name: socialreviews
  version: 1.0.0
  title: socialreviews
  contact:
    name: Admin
    email: admin@companyc.com
    url: 'http://www.companyc.com'
schemes:
  - https
  - http
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
externalDocs:
  description: Company C Documentation
  url: 'http://www.companyc.com'
